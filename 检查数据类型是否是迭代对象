迭代和递归都是循环的一种。
简单地说，递归是重复调用函数自身实现循环。迭代是函数内某段代码实现循环，而迭代与普通循环的区别是：循环代码中参与运算的变量同时是保存结果的变量，
当前保存的结果作为下一次循环计算的初始值。
迭代器是访问集合元素的一种方式。迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退，不过这也没什么，因为人们很
少在迭代途中往后退。另外，迭代器的一大优点是不要求事先准备好整个迭代过程中所有的元素。迭代器仅仅在迭代到某个元素时才计算该元素，而在这之前或之后，元素
可以不存在或者被销毁。这个特点使得它特别适合用于遍历一些巨大的或是无限的集合，比如几个G的文件

1.迭代器协议是指：对象必须提供一个next方法，执行该方法要么返回迭代中的下一项，要么就引起一个Stoplteration异常。以终止次迭代（只能往后走不能往前退）。
2.可迭代对象，实现了迭代器协议的对象（如何实现：对象内部定义一个__iter__()方法）
3.协议是一种约定，可迭代对象实现了迭代器协议，python内部工具（如：for，sum，min，max函数等）使用迭代器访问对象。
PS：（字符串，列表，元组，字典，集合，文件对象）这些都不是可迭代对象，只不过for循环调用了他们内部的__iter__()方法，把他们变成了可迭代对象
In [16]: iter(5)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-16-f0913ab840ef> in <module>
----> 1 iter(5)

TypeError: 'int' object is not iterable
In [18]: iter([1,2,3])
Out[18]: <list_iterator at 0x77e3e50>
#inter函数可以用于检查对象是否是一个列表或者是nump数组
